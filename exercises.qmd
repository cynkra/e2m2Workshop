---
title: "Exercises"
editor:
  render-on-save: true
---

<details open="true">
<summary>Exercises 1: logistic model</summary>

Goal: convert the code located at `./assets/1_shiny/logistic/verhulst.R` into a Shiny app.

```{r, warning=FALSE, message=FALSE}
library(ggplot2)
library(dplyr)

# Read and transform data
ver <- read.table(
  "http://pbil.univ-lyon1.fr/R/donnees/VerhulstPF1847.txt",
  sep = "\t",
  header = TRUE
) |> mutate(obs = obs / 10^6, theo = theo / 10^6)

t0 <- ver$t[1]
N0 <- ver$obs[1]

# Model equations
logistic <- function(t, p) {
  with(as.list(p), {
    K / (1 + ((K - N0)/N0) * exp(-r*(t-t0)))
  })
}

# Minimize
sce <- function(p) {
  theo <- sapply(ver$t, logistic, p = setNames(p, c("r", "K")))
  return(sum((ver$obs - theo)^2))
}

# Fit: K = 5 means 5 millions people max (*10^6)
nlmfit <- nlm(f = sce, p = c(0.02, 5))

# Calculate model with predicted coefficients
tseq <- seq(from = 1800, to = 2000, by = 1)
res <- data.frame(
  t = tseq,
  y = logistic(tseq, p = setNames(nlmfit$estimate, c("r", "K")))
)

# Add linear model alternative
lm_coef <- coef(lm(ver$obs ~ ver$t))

# Plot everything
ggplot(data = res) +
  geom_line(mapping = aes(x = t, y = y)) +
  geom_point(
    data = ver,
    mapping = aes(x = t, y = obs), color = "lightblue"
  ) +
  geom_abline(
    slope = lm_coef[2],
    intercept = lm_coef[1],
    color = "pink"
  ) +
  labs(
    x = "Year",
    y = "Population in million",
    title = "Population growth in belgium"
  )
```
</details>
