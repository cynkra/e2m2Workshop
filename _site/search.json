[
  {
    "objectID": "assets/R/2_quarto/manuscript-example/index.html",
    "href": "assets/R/2_quarto/manuscript-example/index.html",
    "title": "manuscript-example",
    "section": "",
    "text": "This is a simple placeholder for the manuscript’s main document (Knuth 1984).\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "assets/R/2_quarto/manuscript-example/index.html#section",
    "href": "assets/R/2_quarto/manuscript-example/index.html#section",
    "title": "manuscript-example",
    "section": "",
    "text": "This is a simple placeholder for the manuscript’s main document (Knuth 1984).\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sessions/3_closing/index.html#thanks",
    "href": "sessions/3_closing/index.html#thanks",
    "title": "Closing remarks",
    "section": "Thanks!",
    "text": "Thanks!"
  },
  {
    "objectID": "sessions/1_shiny/index.html#i-get-a-pretty-cool-local-r-program",
    "href": "sessions/1_shiny/index.html#i-get-a-pretty-cool-local-r-program",
    "title": "Dynamic data analysis with Shiny",
    "section": "I get a pretty cool local R program …",
    "text": "I get a pretty cool local R program …\n\n… But nobody can use it."
  },
  {
    "objectID": "sessions/1_shiny/index.html#but-wait-web-applications-exist-for-a-long-time.",
    "href": "sessions/1_shiny/index.html#but-wait-web-applications-exist-for-a-long-time.",
    "title": "Dynamic data analysis with Shiny",
    "section": "But wait … web applications exist for a long time.",
    "text": "But wait … web applications exist for a long time.\n\n\nSure, you just need to convert R to web languages (HTML, CSS, JS)."
  },
  {
    "objectID": "sessions/1_shiny/index.html#isnt-there-an-easier-way-for-r-developers",
    "href": "sessions/1_shiny/index.html#isnt-there-an-easier-way-for-r-developers",
    "title": "Dynamic data analysis with Shiny",
    "section": "Isn’t there an easier way for R developers?",
    "text": "Isn’t there an easier way for R developers?"
  },
  {
    "objectID": "sessions/1_shiny/index.html#welcome-shiny",
    "href": "sessions/1_shiny/index.html#welcome-shiny",
    "title": "Dynamic data analysis with Shiny",
    "section": "Welcome Shiny?",
    "text": "Welcome Shiny?\n\n\n\n\n\n\n\n\nMake web development accessible to R people.\nUnleash programs interactivity.\n\nPoint and click data Science."
  },
  {
    "objectID": "sessions/1_shiny/index.html#how-does-a-shiny-app-looks",
    "href": "sessions/1_shiny/index.html#how-does-a-shiny-app-looks",
    "title": "Dynamic data analysis with Shiny",
    "section": "How does a Shiny app looks?",
    "text": "How does a Shiny app looks?"
  },
  {
    "objectID": "sessions/1_shiny/index.html#is-the-code-complex",
    "href": "sessions/1_shiny/index.html#is-the-code-complex",
    "title": "Dynamic data analysis with Shiny",
    "section": "Is the code complex?",
    "text": "Is the code complex?"
  },
  {
    "objectID": "sessions/1_shiny/index.html#anatomy-of-a-shiny-app",
    "href": "sessions/1_shiny/index.html#anatomy-of-a-shiny-app",
    "title": "Dynamic data analysis with Shiny",
    "section": "Anatomy of a Shiny app",
    "text": "Anatomy of a Shiny app"
  },
  {
    "objectID": "sessions/1_shiny/index.html#ui-shiny-is-able-to-produce-html-from-r",
    "href": "sessions/1_shiny/index.html#ui-shiny-is-able-to-produce-html-from-r",
    "title": "Dynamic data analysis with Shiny",
    "section": "UI: shiny is able to produce HTML from R!",
    "text": "UI: shiny is able to produce HTML from R!\n\nshiny::selectInput(\"select\", \"Select\", colnames(mtcars))\n\n\n\n\n&lt;div class=\"form-group shiny-input-container\"&gt;\n  &lt;label class=\"control-label\" id=\"select-label\" for=\"select\"&gt;Select&lt;/label&gt;\n  &lt;div&gt;\n    &lt;select id=\"select\" class=\"shiny-input-select\"&gt;&lt;option value=\"mpg\" selected&gt;mpg&lt;/option&gt;\n&lt;option value=\"cyl\"&gt;cyl&lt;/option&gt;\n&lt;option value=\"disp\"&gt;disp&lt;/option&gt;\n&lt;option value=\"hp\"&gt;hp&lt;/option&gt;\n&lt;option value=\"drat\"&gt;drat&lt;/option&gt;\n&lt;option value=\"wt\"&gt;wt&lt;/option&gt;\n&lt;option value=\"qsec\"&gt;qsec&lt;/option&gt;\n&lt;option value=\"vs\"&gt;vs&lt;/option&gt;\n&lt;option value=\"am\"&gt;am&lt;/option&gt;\n&lt;option value=\"gear\"&gt;gear&lt;/option&gt;\n&lt;option value=\"carb\"&gt;carb&lt;/option&gt;&lt;/select&gt;\n    &lt;script type=\"application/json\" data-for=\"select\" data-nonempty=\"\"&gt;{\"plugins\":[\"selectize-plugin-a11y\"]}&lt;/script&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n\nYou don’t need to write any HTML, CSS and JS (but you could 😈…)"
  },
  {
    "objectID": "sessions/1_shiny/index.html#initialize-interactivity-with-inputs",
    "href": "sessions/1_shiny/index.html#initialize-interactivity-with-inputs",
    "title": "Dynamic data analysis with Shiny",
    "section": "Initialize interactivity with inputs",
    "text": "Initialize interactivity with inputs\n\n\n\nUI: create elements with an unique inputId, variable.\nServer: recover its value within input[[\"variable\"]] or input$variable.\n\ninput is read only."
  },
  {
    "objectID": "sessions/1_shiny/index.html#render-output-elements",
    "href": "sessions/1_shiny/index.html#render-output-elements",
    "title": "Dynamic data analysis with Shiny",
    "section": "Render output elements",
    "text": "Render output elements\n\n\n\nUse a suitable renderer: renderTable, renderPlot, …\nAssign unique outputId: data.\nRecover output on the UI (IDs must match!): tableOutput, plotOutput, …\n\noutput is readonly."
  },
  {
    "objectID": "sessions/1_shiny/index.html#intermediate-results-with-reactive-expressions",
    "href": "sessions/1_shiny/index.html#intermediate-results-with-reactive-expressions",
    "title": "Dynamic data analysis with Shiny",
    "section": "Intermediate results with reactive expressions",
    "text": "Intermediate results with reactive expressions\n\n\n\n\nReturn values.\nTake dependencies on anything reactive inside (input, other reactives).\nEvaluate with ().\nNo side effects! (write.csv, …).\n\nLazy and cached: don’t run if not used, only recompute when needed."
  },
  {
    "objectID": "sessions/1_shiny/index.html#overview-of-the-reactive-graph",
    "href": "sessions/1_shiny/index.html#overview-of-the-reactive-graph",
    "title": "Dynamic data analysis with Shiny",
    "section": "Overview of the reactive graph",
    "text": "Overview of the reactive graph"
  },
  {
    "objectID": "sessions/1_shiny/index.html#reactive-graph-example",
    "href": "sessions/1_shiny/index.html#reactive-graph-example",
    "title": "Dynamic data analysis with Shiny",
    "section": "Reactive graph example",
    "text": "Reactive graph example\n\n\n\n\nSpeaker notes go here."
  },
  {
    "objectID": "sessions/1_shiny/index.html#your-turn",
    "href": "sessions/1_shiny/index.html#your-turn",
    "title": "Dynamic data analysis with Shiny",
    "section": "Your turn",
    "text": "Your turn"
  },
  {
    "objectID": "sessions/1_shiny/index.html#exercise-1-adjustement-of-logistic-model-12",
    "href": "sessions/1_shiny/index.html#exercise-1-adjustement-of-logistic-model-12",
    "title": "Dynamic data analysis with Shiny",
    "section": "Exercise 1: adjustement of logistic model (1/2)",
    "text": "Exercise 1: adjustement of logistic model (1/2)\nWe consider the logistic model (Verhulst) used to describe population growth.\n\\[\n\\frac{dN}{dt} = rN \\left( 1 - \\frac{N}{K} \\right).\n\\] whose solution is given by:\n\\[\nN(t) = \\frac{K}{1 + \\left(\\frac{K - N_0}{N_0}\\right) e^{-rt}}.\n\\] Where:\n\n\nN(t) is the population size at time t.\n\nK is the carrying capacity.\n\nr is the intrinsic growth rate.\n\n\\(N_0\\) is the initial population size at time t=0."
  },
  {
    "objectID": "sessions/1_shiny/index.html#exercise-1-22",
    "href": "sessions/1_shiny/index.html#exercise-1-22",
    "title": "Dynamic data analysis with Shiny",
    "section": "Exercise 1 (2/2)",
    "text": "Exercise 1 (2/2)\nWe define the following objective function, \\(y_i\\) being the observed data and \\(f(x_i, \\beta)\\) the model predictions given a set of parameters \\(\\beta\\):\n\\[\nS(\\beta) = \\sum_{i=1}^{n} (y_i - f(x_i, \\beta))^2.\n\\] We want to minimize this ( represents the best parameters estimate):\n\\[\n\\hat{\\beta} = \\arg \\min_{\\beta} S(\\beta) =\\arg \\min_{\\beta} \\sum_{i=1}^{n} (y_i - f(x_i, \\beta))^2.\n\\]\nBrowse to  and complete all the exercise 1 tasks."
  },
  {
    "objectID": "sessions/1_shiny/index.html#homework-going-further",
    "href": "sessions/1_shiny/index.html#homework-going-further",
    "title": "Dynamic data analysis with Shiny",
    "section": "Homework: going further",
    "text": "Homework: going further\nYou can apply the same principle to the following article: https://www.jstatsoft.org/v66/i05/ about doing non linear regression with nlstools."
  },
  {
    "objectID": "sessions/1_shiny/index.html#discover-shiny-components",
    "href": "sessions/1_shiny/index.html#discover-shiny-components",
    "title": "Dynamic data analysis with Shiny",
    "section": "Discover shiny components",
    "text": "Discover shiny components\nhttps://shiny.posit.co/r/components/"
  },
  {
    "objectID": "sessions/1_shiny/index.html#improve-your-application-layout",
    "href": "sessions/1_shiny/index.html#improve-your-application-layout",
    "title": "Dynamic data analysis with Shiny",
    "section": "Improve your application layout",
    "text": "Improve your application layout\nhttps://shiny.posit.co/r/layouts/"
  },
  {
    "objectID": "sessions/1_shiny/index.html#exercise-2-k-means-clustering-on-the-palmerpenguins-dataset",
    "href": "sessions/1_shiny/index.html#exercise-2-k-means-clustering-on-the-palmerpenguins-dataset",
    "title": "Dynamic data analysis with Shiny",
    "section": "Exercise 2: k-means clustering on the palmerpenguins dataset",
    "text": "Exercise 2: k-means clustering on the palmerpenguins dataset\nBrowse to  and complete all the exercise 2 tasks."
  },
  {
    "objectID": "sessions/1_shiny/index.html#congratulations",
    "href": "sessions/1_shiny/index.html#congratulations",
    "title": "Dynamic data analysis with Shiny",
    "section": "Congratulations",
    "text": "Congratulations"
  },
  {
    "objectID": "sessions/1_shiny/index.html#whats-next",
    "href": "sessions/1_shiny/index.html#whats-next",
    "title": "Dynamic data analysis with Shiny",
    "section": "What’s next",
    "text": "What’s next\nTowards more maintainable Shiny applications:\n\nImprove user feedback: https://mastering-shiny.org/action-feedback.html.\nLeverage Shiny modules: https://mastering-shiny.org/scaling-modules.html\nTesting and performances: https://mastering-shiny.org/scaling-testing.html, https://mastering-shiny.org/performance.html"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Your instructors",
    "section": "",
    "text": "David Granjon (cynkra)\n\nDavid is lead Shiny developer at cynkra and holds a Ph.D. in applied mathematics from Université Pierre et Marie Curie and Université de Lausanne. He is the founder of the open source Interface organization, where he develops Shiny extensions, writes books and delivers advanced Shiny workshops from Posit Conf to R in Pharma. David worked 5 years in the pharma industry where he helped design production-ready Shiny apps."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Analysis and Reporting with Shiny and Quarto",
    "section": "",
    "text": "This course focuses on demonstrating how Shiny and Quarto can supercharge your data analysis and reporting workflows. It is therefore not a Data Science workshop."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Data Analysis and Reporting with Shiny and Quarto",
    "section": "",
    "text": "This course focuses on demonstrating how Shiny and Quarto can supercharge your data analysis and reporting workflows. It is therefore not a Data Science workshop."
  },
  {
    "objectID": "index.html#pre-requisites",
    "href": "index.html#pre-requisites",
    "title": "Data Analysis and Reporting with Shiny and Quarto",
    "section": "Pre-requisites:",
    "text": "Pre-requisites:\n\nRecent R version installed (R &gt; 4.2.0).\nKnow how to run a script.\nKnowledge about R package development.\nUp to date IDE: RStudio/VSCode/Positron/… (https://posit.co/download/rstudio-desktop/).\nQuarto installed: https://quarto.org/docs/get-started/."
  },
  {
    "objectID": "index.html#workshop-program",
    "href": "index.html#workshop-program",
    "title": "Data Analysis and Reporting with Shiny and Quarto",
    "section": "Workshop program",
    "text": "Workshop program\n\n\n\nSession\nTopic\nDuration\n\n\n\n\nWelcome\n👋 Welcome\n10 min\n\n\nSession 1\n📚 Exploratory data analysis with Shiny\n1h40min\n\n\nBreak\n☕ Active break (ask any questions)\n20 min\n\n\nSession 2\n📚 Seamless reporting with Quarto\n1h40min\n\n\nWrap\n🎁 Wrap up\n10 min"
  },
  {
    "objectID": "index.html#recommended-readings",
    "href": "index.html#recommended-readings",
    "title": "Data Analysis and Reporting with Shiny and Quarto",
    "section": "Recommended readings:",
    "text": "Recommended readings:\n\nBooks:\n\nR packages.\nMastering Shiny.\nNonlinear Regression with R."
  },
  {
    "objectID": "sessions/0_welcome/index.html#hi-and-welcome",
    "href": "sessions/0_welcome/index.html#hi-and-welcome",
    "title": "Introduction",
    "section": "Hi and Welcome!",
    "text": "Hi and Welcome!"
  },
  {
    "objectID": "sessions/0_welcome/index.html#important-information",
    "href": "sessions/0_welcome/index.html#important-information",
    "title": "Introduction",
    "section": "Important information",
    "text": "Important information\n\nWorkshop website: TBD.\n…"
  },
  {
    "objectID": "sessions/0_welcome/index.html#who-are-you-workshop-pre-requisites",
    "href": "sessions/0_welcome/index.html#who-are-you-workshop-pre-requisites",
    "title": "Introduction",
    "section": "Who are you: workshop pre-requisites",
    "text": "Who are you: workshop pre-requisites\n\n\nYou are a master student/doctoral student with data analysis background.\nYou don’t know or just heard about Shiny/Quarto and want to supercharge your work.\nYou know R."
  },
  {
    "objectID": "sessions/0_welcome/index.html#david-granjon",
    "href": "sessions/0_welcome/index.html#david-granjon",
    "title": "Introduction",
    "section": "David Granjon",
    "text": "David Granjon\n\n\nDavid works as a Lead Shiny Developer at cynkra GmbH and founder of the open source RinteRface organisation."
  },
  {
    "objectID": "sessions/0_welcome/index.html#objectives",
    "href": "sessions/0_welcome/index.html#objectives",
    "title": "Introduction",
    "section": "Objectives",
    "text": "Objectives\n\n\nUnderstand what is Shiny.\nHow to move from “static” data analysis to “dynamic” data analysis.\nDiscover how Quarto can improve your data reporting journey."
  },
  {
    "objectID": "sessions/2_quarto/index.html#welcome-to-quarto",
    "href": "sessions/2_quarto/index.html#welcome-to-quarto",
    "title": "Easy reporting with Quarto",
    "section": "Welcome to Quarto®",
    "text": "Welcome to Quarto®\nAn open-source scientific and technical publishing system 1"
  },
  {
    "objectID": "sessions/2_quarto/index.html#various-output-formats",
    "href": "sessions/2_quarto/index.html#various-output-formats",
    "title": "Easy reporting with Quarto",
    "section": "Various output formats",
    "text": "Various output formats\n\nReports.\nPresentations.\nBooks.\nWebsites, blogs.\nDashboards."
  },
  {
    "objectID": "sessions/2_quarto/index.html#various-languages",
    "href": "sessions/2_quarto/index.html#various-languages",
    "title": "Easy reporting with Quarto",
    "section": "Various languages",
    "text": "Various languages\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR, Python, julia, observable."
  },
  {
    "objectID": "sessions/2_quarto/index.html#how-quarto-works",
    "href": "sessions/2_quarto/index.html#how-quarto-works",
    "title": "Easy reporting with Quarto",
    "section": "How Quarto works",
    "text": "How Quarto works"
  },
  {
    "objectID": "sessions/2_quarto/index.html#is-is-complex",
    "href": "sessions/2_quarto/index.html#is-is-complex",
    "title": "Easy reporting with Quarto",
    "section": "Is is complex?",
    "text": "Is is complex?\n---\ntitle: \"Hello, Quarto\"\nformat: \n  html:\n    code-fold: true\n    code-tools: true\n    code-link: true\n  pdf:\n    geometry: \n      - top=30mm\n      - left=30mm\neditor: visual\n---\n\n## This is an example\n\nA super plot\n\n```{r}\n#| label: scatterplot\n#| echo: true\n\nggplot(mpg, aes(x = hwy, y = cty, color = cyl)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c() +\n  theme_minimal()\n```\n\n## A second title"
  },
  {
    "objectID": "sessions/2_quarto/index.html#exercise-1",
    "href": "sessions/2_quarto/index.html#exercise-1",
    "title": "Easy reporting with Quarto",
    "section": "Exercise 1",
    "text": "Exercise 1\n\nGo in RStudio create a new quarto project and choose manuscript.\nInspect and discuss the structure of the document.\nClick on the render icon and select a format."
  },
  {
    "objectID": "sessions/2_quarto/index.html#markdown-basics-1",
    "href": "sessions/2_quarto/index.html#markdown-basics-1",
    "title": "Easy reporting with Quarto",
    "section": "Markdown basics (1)",
    "text": "Markdown basics (1)\n\nHeadings\n# Heading 1\n## Heading 2\n...\n###### Heading 6\n\n\nImages\n![Caption](&lt;IMAGE_PATH&gt;){fig-align=\"center|left|right\" ...}\n\n\nCode\n```{r}\n#| echo: false\n#| fig-cap: \"Air Quality\"\n#| label: code label\n#| eval: true\n\nlibrary(tidyverse)\npenguins %&gt;% \n  group_by(species) %&gt;% \n  summarize(across(where(is.numeric), mean, na.rm = TRUE))\n```"
  },
  {
    "objectID": "sessions/2_quarto/index.html#code-annotations",
    "href": "sessions/2_quarto/index.html#code-annotations",
    "title": "Easy reporting with Quarto",
    "section": "Code annotations",
    "text": "Code annotations\n\n\nCode\n\n```r\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins |&gt;                                      # &lt;1&gt;\n  mutate(                                        # &lt;2&gt;\n    bill_ratio = bill_depth_mm / bill_length_mm, # &lt;2&gt;\n    bill_area  = bill_depth_mm * bill_length_mm  # &lt;2&gt;\n  )                                              # &lt;2&gt;\n```\n1. Take `penguins`, and then,\n2. add new columns for the bill ratio and bill area.\n\nResult\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n1penguins |&gt;\n2  mutate(\n    bill_ratio = bill_depth_mm / bill_length_mm,\n    bill_area  = bill_depth_mm * bill_length_mm\n  )\n\n1\n\nTake penguins, and then,\n\n2\n\nadd new columns for the bill ratio and bill area."
  },
  {
    "objectID": "sessions/2_quarto/index.html#code-options",
    "href": "sessions/2_quarto/index.html#code-options",
    "title": "Easy reporting with Quarto",
    "section": "Code options",
    "text": "Code options\n\n\nCode\n\n```r\n#| code-fold: true\n#| code-summary: \"Show the code\"\n1+1\n```\n\nResult\n\n\nShow the code\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "sessions/2_quarto/index.html#output-location",
    "href": "sessions/2_quarto/index.html#output-location",
    "title": "Easy reporting with Quarto",
    "section": "Output location",
    "text": "Output location\nAdd #| output-location: column to you code options.\n\n```r\n#| output-location: column\n#| fig-width: 6\n#| fig-height: 4\nggplot(penguins, \n       aes(x = bill_length_mm, \n           y = bill_depth_mm, \n           color = species)) +\n  geom_point()\n```\n. . .\n\n\nggplot(\n  penguins,\n  aes(x = bill_length_mm, y = bill_depth_mm, color = species)\n) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "sessions/2_quarto/index.html#diagrams",
    "href": "sessions/2_quarto/index.html#diagrams",
    "title": "Easy reporting with Quarto",
    "section": "Diagrams",
    "text": "Diagrams\nQuarto supports mermaid.js\n\n\nCode\n\n```mermaid\n%%| fig-width: 6.5\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n```\n\nResult\n\n\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}"
  },
  {
    "objectID": "sessions/2_quarto/index.html#caching-computations",
    "href": "sessions/2_quarto/index.html#caching-computations",
    "title": "Easy reporting with Quarto",
    "section": "Caching computations",
    "text": "Caching computations\n---\ntitle: \"My Document\"\nexecute: \n  cache: true\n---\n\n```{r}\n#| cache: true\n# code for lengthy computation...\n```"
  },
  {
    "objectID": "sessions/2_quarto/index.html#a-dashboard-example",
    "href": "sessions/2_quarto/index.html#a-dashboard-example",
    "title": "Easy reporting with Quarto",
    "section": "A dashboard example",
    "text": "A dashboard example"
  },
  {
    "objectID": "exercises.html",
    "href": "exercises.html",
    "title": "Exercises",
    "section": "",
    "text": "Exercises 1: discover reactive programming with the logistic model\n\nGoal: convert the code located at ./assets/1_shiny/logistic/verhulst.R into a Shiny app. By the end of this exercise, you should be able to know how to build a basic Shiny app, that is, what is part of the ui and the server.\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read and transform data\nver &lt;- read.table(\n  \"http://pbil.univ-lyon1.fr/R/donnees/VerhulstPF1847.txt\",\n  sep = \"\\t\",\n  header = TRUE\n) |&gt;\n  mutate(obs = obs / 10^6, theo = theo / 10^6)\n\nt0 &lt;- ver$t[1]\nN0 &lt;- ver$obs[1]\n\n# Model equations\nlogistic &lt;- function(t, p) {\n  with(as.list(p), {\n    K / (1 + ((K - N0) / N0) * exp(-r * (t - t0)))\n  })\n}\n\n# Minimize\nsce &lt;- function(p) {\n  theo &lt;- logistic(ver$t, p = setNames(p, c(\"r\", \"K\")))\n  # Least squears\n  sum((ver$obs - theo)^2)\n}\n\n# Fit: K = 5 means 5 millions people max (*10^6)\nnlmfit &lt;- nlm(f = sce, p = c(0.02, 5))\n\n# Calculate model with predicted coefficients\ntseq &lt;- seq(from = 1800, to = 2000, by = 1)\nres &lt;- data.frame(\n  t = tseq,\n  y = logistic(tseq, p = setNames(nlmfit$estimate, c(\"r\", \"K\")))\n)\n\n# Add linear model alternative\nlm_coef &lt;- coef(lm(ver$obs ~ ver$t))\n\n# Plot everything\nggplot(data = res) +\n  geom_line(mapping = aes(x = t, y = y), color = \"red\") +\n  geom_point(\n    data = ver,\n    mapping = aes(x = t, y = obs)\n  ) +\n  geom_abline(\n    slope = lm_coef[2],\n    intercept = lm_coef[1],\n    color = \"grey\",\n    linetype = \"dashed\"\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"Population in million\",\n    title = \"Population growth in Belgium\"\n  )\n\n\n\n\n\n\n\n\n\nCreate an app.R file with this template:\n\nlibrary(shiny)\n\nui &lt;- fluidPage(\n  \n)\n\nserver &lt;- function(input, output, session) {\n  \n}\n\nshinyApp(ui, server)\n\nWithin the ui object, create 2 input widgets for r and K parameters. You can use ?shiny::numericInput for guidance.\nImportantly, anything that isn’t reactive can live outside the server function like the logistic function definition and other objects:\n\nlogistic &lt;- function(t, p) {\n  with(as.list(p), {\n    K / (1 + ((K - N0)/N0) * exp(-r*(t-t0)))\n  })\n}\n...\n\nIn the server object, create a reactive that calculate the predicted values by the logistic equation given the 2 UI input parameters (this isn’t the adjusted model):\n\nres &lt;- reactive({\n  # Calculate model with input parameter\n  data.frame(\n    t = tseq,\n    y = logistic(tseq, p = c(r = &lt;INPUT_1&gt;, K = &lt;INPUT_2&gt;)))\n  )\n})\n\nIn the server object use the res reactive expression to plot the data:\n\n# Replace TBD by what is relevant\noutput$&lt;TBD&gt; &lt;- render&lt;TBD&gt;({\n  ggplot(data = &lt;TBD&gt;) +\n  geom_line(mapping = aes(x = t, y = y), color = \"red\") +\n  geom_point(\n    data = ver,\n    mapping = aes(x = t, y = obs)\n  ) +\n  geom_abline(\n    slope = lm_coef[2],\n    intercept = lm_coef[1],\n    color = \"grey\",\n    linetype = \"dashed\"\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"Population in million\",\n    title = \"Population growth in belgium\"\n  )\n})\nDon’t forget to add the corresponding *Output container in the ui part.\n\nRun the app and try to change r and K.\nLet’s fit the model. Create another reactive expression that returns the best fit and corresponding predicted results:\n\nfit &lt;- reactive({\n  # Replace &lt;INPUT_1&gt;, &lt;INPUT_2&gt; by what is defined in ui\n  nlmfit &lt;- nlm(f = sce, p = c(&lt;INPUT_1&gt;, &lt;INPUT_2&gt;))\n\n  # Calculate model with predicted coefficients\n  data.frame(\n    t = tseq,\n    y = logistic(tseq, p = setNames(nlmfit$estimate, c(\"r\", \"K\")))\n  )\n})\n\nModify the existing output to include the new fitted curve. Replace &lt;TBD&gt; by the relevant value:\n\noutput$plot &lt;- renderPlot({\n    ggplot(data = res()) +\n      geom_line(mapping = aes(x = t, y = y)) +\n      # Model fit curve\n      geom_line(data = &lt;TBD&gt;, mapping = aes(x = t, y = y), color = \"red\") +\n      geom_point(\n        data = ver,\n        mapping = aes(x = t, y = obs)\n      ) +\n      geom_abline(\n        slope = lm_coef[2],\n        intercept = lm_coef[1],\n        color = \"grey\",\n        linetype = \"dashed\"\n      ) +\n      labs(\n        x = \"Year\",\n        y = \"Population in million\",\n        title = \"Population growth in belgium\"\n      )\n  })\n\n\n\nExercises 2: kmeans clustering on the palmerpenguins dataset\n\nGoal: improve the application at ./assets/1_shiny/kmeans/tiny-app.R. You don’t need to change the server part of the application, as this exercise focuses on UI customisation.\n\nUse the page_sidebar() to split input and output. Typically you can start from something like:\n\npage_sidebar(\n  title = \"K-means Clustering of Palmer Penguins\",\n  sidebar = sidebar(\n    title = \"Controls\",\n    # INPUT CONTROLS\n  ),\n  # MAIN CONTENT (PLOTS)\n)\n\nReplace the radioButtons() by a more relevant widget. You can do the same for numericInput() and checkboxInput().\nMove the plot to the main content area."
  },
  {
    "objectID": "sessions/2_quarto/index.html",
    "href": "sessions/2_quarto/index.html",
    "title": "Easy reporting with Quarto",
    "section": "",
    "text": "library(ggplot2)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "sessions/2_quarto/index.html#footnotes",
    "href": "sessions/2_quarto/index.html#footnotes",
    "title": "Easy reporting with Quarto",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis workshop is fully made with Quarto!↩︎"
  },
  {
    "objectID": "assets/R/2_quarto/website-example/about.html",
    "href": "assets/R/2_quarto/website-example/about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sessions/2_quarto/index.html#exercise-1-quarto-manuscripts",
    "href": "sessions/2_quarto/index.html#exercise-1-quarto-manuscripts",
    "title": "Easy reporting with Quarto",
    "section": "Exercise 1: Quarto manuscripts",
    "text": "Exercise 1: Quarto manuscripts\nComplete exercise 3 at https://rsc.cynkra.com/e2m2-workshop/exercises.html#quarto."
  },
  {
    "objectID": "sessions/2_quarto/index.html#exercise-2-quarto-websites",
    "href": "sessions/2_quarto/index.html#exercise-2-quarto-websites",
    "title": "Easy reporting with Quarto",
    "section": "Exercise 2: Quarto websites",
    "text": "Exercise 2: Quarto websites\nComplete exercise 4 at https://rsc.cynkra.com/e2m2-workshop/exercises.html#quarto."
  },
  {
    "objectID": "assets/R/2_quarto/website-example/index.html",
    "href": "assets/R/2_quarto/website-example/index.html",
    "title": "website-example",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sessions/2_quarto/index.html#equations",
    "href": "sessions/2_quarto/index.html#equations",
    "title": "Easy reporting with Quarto",
    "section": "Equations",
    "text": "Equations\nInline\n$\\lambda$\nDisplay\n$$\n\\frac{dN}{dt} = rN \\left( 1 - \\frac{N}{K} \\right).\n$$"
  },
  {
    "objectID": "exercises.html#shiny",
    "href": "exercises.html#shiny",
    "title": "Exercises",
    "section": "",
    "text": "Exercises 1: discover reactive programming with the logistic model\n\nGoal: convert the code located at ./assets/1_shiny/logistic/verhulst.R into a Shiny app. By the end of this exercise, you should be able to know how to build a basic Shiny app, that is, what is part of the ui and the server.\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read and transform data\nver &lt;- read.table(\n  \"http://pbil.univ-lyon1.fr/R/donnees/VerhulstPF1847.txt\",\n  sep = \"\\t\",\n  header = TRUE\n) |&gt;\n  mutate(obs = obs / 10^6, theo = theo / 10^6)\n\nt0 &lt;- ver$t[1]\nN0 &lt;- ver$obs[1]\n\n# Model equations\nlogistic &lt;- function(t, p) {\n  with(as.list(p), {\n    K / (1 + ((K - N0) / N0) * exp(-r * (t - t0)))\n  })\n}\n\n# Minimize\nsce &lt;- function(p) {\n  theo &lt;- logistic(ver$t, p = setNames(p, c(\"r\", \"K\")))\n  # Least squears\n  sum((ver$obs - theo)^2)\n}\n\n# Fit: K = 5 means 5 millions people max (*10^6)\nnlmfit &lt;- nlm(f = sce, p = c(0.02, 5))\n\n# Calculate model with predicted coefficients\ntseq &lt;- seq(from = 1800, to = 2000, by = 1)\nres &lt;- data.frame(\n  t = tseq,\n  y = logistic(tseq, p = setNames(nlmfit$estimate, c(\"r\", \"K\")))\n)\n\n# Add linear model alternative\nlm_coef &lt;- coef(lm(ver$obs ~ ver$t))\n\n# Plot everything\nggplot(data = res) +\n  geom_line(mapping = aes(x = t, y = y), color = \"red\") +\n  geom_point(\n    data = ver,\n    mapping = aes(x = t, y = obs)\n  ) +\n  geom_abline(\n    slope = lm_coef[2],\n    intercept = lm_coef[1],\n    color = \"grey\",\n    linetype = \"dashed\"\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"Population in million\",\n    title = \"Population growth in Belgium\"\n  )\n\n\n\n\n\n\n\n\n\nCreate an app.R file with this template:\n\nlibrary(shiny)\n\nui &lt;- fluidPage(\n  \n)\n\nserver &lt;- function(input, output, session) {\n  \n}\n\nshinyApp(ui, server)\n\nWithin the ui object, create 2 input widgets for r and K parameters. You can use ?shiny::numericInput for guidance.\nImportantly, anything that isn’t reactive can live outside the server function like the logistic function definition and other objects:\n\nlogistic &lt;- function(t, p) {\n  with(as.list(p), {\n    K / (1 + ((K - N0)/N0) * exp(-r*(t-t0)))\n  })\n}\n...\n\nIn the server object, create a reactive that calculate the predicted values by the logistic equation given the 2 UI input parameters (this isn’t the adjusted model):\n\nres &lt;- reactive({\n  # Calculate model with input parameter\n  data.frame(\n    t = tseq,\n    y = logistic(tseq, p = c(r = &lt;INPUT_1&gt;, K = &lt;INPUT_2&gt;)))\n  )\n})\n\nIn the server object use the res reactive expression to plot the data:\n\n# Replace TBD by what is relevant\noutput$&lt;TBD&gt; &lt;- render&lt;TBD&gt;({\n  ggplot(data = &lt;TBD&gt;) +\n  geom_line(mapping = aes(x = t, y = y), color = \"red\") +\n  geom_point(\n    data = ver,\n    mapping = aes(x = t, y = obs)\n  ) +\n  geom_abline(\n    slope = lm_coef[2],\n    intercept = lm_coef[1],\n    color = \"grey\",\n    linetype = \"dashed\"\n  ) +\n  labs(\n    x = \"Year\",\n    y = \"Population in million\",\n    title = \"Population growth in belgium\"\n  )\n})\nDon’t forget to add the corresponding *Output container in the ui part.\n\nRun the app and try to change r and K.\nLet’s fit the model. Create another reactive expression that returns the best fit and corresponding predicted results:\n\nfit &lt;- reactive({\n  # Replace &lt;INPUT_1&gt;, &lt;INPUT_2&gt; by what is defined in ui\n  nlmfit &lt;- nlm(f = sce, p = c(&lt;INPUT_1&gt;, &lt;INPUT_2&gt;))\n\n  # Calculate model with predicted coefficients\n  data.frame(\n    t = tseq,\n    y = logistic(tseq, p = setNames(nlmfit$estimate, c(\"r\", \"K\")))\n  )\n})\n\nModify the existing output to include the new fitted curve. Replace &lt;TBD&gt; by the relevant value:\n\noutput$plot &lt;- renderPlot({\n    ggplot(data = res()) +\n      geom_line(mapping = aes(x = t, y = y)) +\n      # Model fit curve\n      geom_line(data = &lt;TBD&gt;, mapping = aes(x = t, y = y), color = \"red\") +\n      geom_point(\n        data = ver,\n        mapping = aes(x = t, y = obs)\n      ) +\n      geom_abline(\n        slope = lm_coef[2],\n        intercept = lm_coef[1],\n        color = \"grey\",\n        linetype = \"dashed\"\n      ) +\n      labs(\n        x = \"Year\",\n        y = \"Population in million\",\n        title = \"Population growth in belgium\"\n      )\n  })\n\n\n\nExercises 2: kmeans clustering on the palmerpenguins dataset\n\nGoal: improve the application at ./assets/1_shiny/kmeans/tiny-app.R. You don’t need to change the server part of the application, as this exercise focuses on UI customisation.\n\nUse the page_sidebar() to split input and output. Typically you can start from something like:\n\npage_sidebar(\n  title = \"K-means Clustering of Palmer Penguins\",\n  sidebar = sidebar(\n    title = \"Controls\",\n    # INPUT CONTROLS\n  ),\n  # MAIN CONTENT (PLOTS)\n)\n\nReplace the radioButtons() by a more relevant widget. You can do the same for numericInput() and checkboxInput().\nMove the plot to the main content area."
  },
  {
    "objectID": "exercises.html#quarto",
    "href": "exercises.html#quarto",
    "title": "Exercises",
    "section": "Quarto",
    "text": "Quarto\n\n\nExercises 3: discover Quarto manuscripts\n\n\nGo in RStudio create a new quarto project and choose manuscript.\nInspect and discuss the structure of the document.\nClick on the render icon and select a format.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe consider logistic model R scrip from exercise 1. From this R code, you can create a small article describing the model.\n\n\nStructure the article with titles, subtitles, …\nLeverage code blocks to display the R code as well as the corresponding output.\nUse Latex equations to describe the model.\n\n\nIf you have better ideas, you can skip 4 and bring your own analysis problem.\n\n\n\n\nExercises 4: Quarto websites\n\n\nGo in RStudio create a new quarto project and choose website.\nChange the website title and render the new website from the main index.qmd.\nCreate a new qmd page and add it to the navbar structure.\nChange the theme: you can look at the bootswatch themes.\n\n\n\n\n\n\n\n\n\nproject:\n  type: website\n\nwebsite:\n  title: \"website-example\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    theme:\n      - cosmo\n      - brand\n    css: styles.css\n    toc: true\n\n\n\n\n\nExercises 5: discover Quarto dashboards\n\n\nTransform the app from Exercise 2 (code here) into a Quarto dashboard. As a starting point, you’ll need something like:\n\n---\ntitle: \"Kmeans explorer\"\nauthor: \"&lt;YOUR NAME&gt;\"\nformat: dashboard\nserver: shiny\n---\nserver is required for the computations to be done by Shiny.\n\nFor the layout, you’ll look at this article and this one."
  },
  {
    "objectID": "sessions/2_quarto/index.html#is-is-complex-anatomy-of-a-qmd-file",
    "href": "sessions/2_quarto/index.html#is-is-complex-anatomy-of-a-qmd-file",
    "title": "Easy reporting with Quarto",
    "section": "Is is complex: anatomy of a qmd file",
    "text": "Is is complex: anatomy of a qmd file\n---\ntitle: \"Hello, Quarto\"\nformat: \n  html:\n    code-fold: true\n    code-tools: true\n    code-link: true\n  pdf:\n    geometry: \n      - top=30mm\n      - left=30mm\neditor: visual\n---\n\n## This is an example\n\nA super plot\n\n```{r}\n#| label: scatterplot\n#| echo: true\n\nggplot(mpg, aes(x = hwy, y = cty, color = cyl)) +\n  geom_point(alpha = 0.5, size = 2) +\n  scale_color_viridis_c() +\n  theme_minimal()\n```\n\n## A second title"
  },
  {
    "objectID": "sessions/2_quarto/index.html#markdown-basics-2",
    "href": "sessions/2_quarto/index.html#markdown-basics-2",
    "title": "Easy reporting with Quarto",
    "section": "Markdown basics (2)",
    "text": "Markdown basics (2)\n\nEquations\n\nInline\n$\\lambda$\n\n\nDisplay\n$$\n\\frac{dN}{dt} = rN \\left( 1 - \\frac{N}{K} \\right).\n$$"
  },
  {
    "objectID": "sessions/2_quarto/index.html#dashboards",
    "href": "sessions/2_quarto/index.html#dashboards",
    "title": "Easy reporting with Quarto",
    "section": "Dashboards",
    "text": "Dashboards\n---\ntitle: \"Old Faithful\"\nformat: dashboard\nserver: shiny\n---\n\n## {.sidebar}\n```{r}\nsliderInput(\"bins\", \"Number of bins:\", \n            min = 1, max = 50, value = 30)\nplotOutput(\"distPlot\")\n```\n\n## Column\n\n```{r}\n#| context: server\noutput$distPlot &lt;- renderPlot({\n  x &lt;- faithful[, 2]  # Old Faithful Geyser data\n  bins &lt;- seq(min(x), max(x), length.out = input$bins + 1)\n  hist(x, breaks = bins, col = 'darkgray', border = 'white')\n})\n```"
  },
  {
    "objectID": "sessions/2_quarto/index.html#exercise-3-quarto-dashboards",
    "href": "sessions/2_quarto/index.html#exercise-3-quarto-dashboards",
    "title": "Easy reporting with Quarto",
    "section": "Exercise 3: Quarto dashboards",
    "text": "Exercise 3: Quarto dashboards\nComplete exercise 5 at https://rsc.cynkra.com/e2m2-workshop/exercises.html#quarto."
  }
]