---
title: "Easy reporting with Quarto"
author: "David Granjon (cynkra GmbH)"
format: 
  revealjs:
    #code-annotations: select
    footer: "<img src=\"../../assets/images/cynkra.svg\" width=\"5%\"/>"
    css: [
      "../../assets/css/custom.scss",
      "../../styles.css"
    ]
    height: 900
    width: 1600
    code-link: true
    code-copy: true
    fontsize: 24pt
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    chalkboard: false
    transition: none
    background-transition: none
editor:
    render-on-save: true
---

```{r setup}
library(ggplot2)
library(palmerpenguins)
```

## Welcome to QuartoÂ®

An open-source scientific and technical publishing system [^lol]

<video autoplay="" muted="" playsinline="" loop="" style="display: block; margin: 0 auto;">
<source src="../../assets/images/2_quarto/quarto.mp4" type="video/mp4">
</video>

[^lol]: This workshop is fully made with Quarto!


## Various output formats

- Reports.
- Presentations.
- Books.
- Websites, blogs.
- Dashboards.

## Various languages

::: {layout-ncol=4}
![](../../assets/images/2_quarto/R.svg)

![](../../assets/images/2_quarto/python.svg)

![](../../assets/images/2_quarto/julia.svg)

![](../../assets/images/2_quarto/observable.svg)
:::

R, Python, julia, observable.

## How Quarto works

![](../../assets/images/2_quarto/rstudio-qmd-how-it-works.png){fig-align="center"}

## Is is complex: anatomy of a qmd file

````md
---
title: "Hello, Quarto"
format: 
  html:
    code-fold: true
    code-tools: true
    code-link: true
  pdf:
    geometry: 
      - top=30mm
      - left=30mm
editor: visual
---

## This is an example

A super plot

```{{r}}
#| label: scatterplot
#| echo: true

ggplot(mpg, aes(x = hwy, y = cty, color = cyl)) +
  geom_point(alpha = 0.5, size = 2) +
  scale_color_viridis_c() +
  theme_minimal()
```

## A second title

````

## Markdown basics (1)

### Headings

```md
# Heading 1
## Heading 2
...
###### Heading 6
```

### Images

```md
![Caption](<IMAGE_PATH>){fig-align="center|left|right" ...}
```

### Code

```` markdown
```{{r}}
#| echo: false
#| fig-cap: "Air Quality"
#| label: code label
#| eval: true

library(tidyverse)
penguins %>% 
  group_by(species) %>% 
  summarize(across(where(is.numeric), mean, na.rm = TRUE))
```
````

## Markdown basics (2)

### Equations

#### Inline

`$\lambda$`

#### Display

```md
$$
\frac{dN}{dt} = rN \left( 1 - \frac{N}{K} \right).
$$
```

## Code annotations

:::: columns

::: column
Code
````markdown

```r
library(tidyverse)
library(palmerpenguins)
penguins |>                                      # <1>
  mutate(                                        # <2>
    bill_ratio = bill_depth_mm / bill_length_mm, # <2>
    bill_area  = bill_depth_mm * bill_length_mm  # <2>
  )                                              # <2>
```
1. Take `penguins`, and then,
2. add new columns for the bill ratio and bill area.

````
:::

::: column
Result
```r
library(tidyverse)
library(palmerpenguins)
penguins |>                                      # <1>
  mutate(                                        # <2>
    bill_ratio = bill_depth_mm / bill_length_mm, # <2>
    bill_area  = bill_depth_mm * bill_length_mm  # <2>
  )                                              # <2>
```
1. Take `penguins`, and then,
2. add new columns for the bill ratio and bill area.
:::

::::

## Code options

:::: columns

::: column
Code
````markdown

```r
#| code-fold: true
#| code-summary: "Show the code"
1+1
```

````
:::

::: column
Result
```{r}
#| code-fold: true
#| code-summary: "Show the code"
1 + 1
```

:::

::::

## Output location

Add `#| output-location: column` to you code options.

````markdown

```r
#| output-location: column
#| fig-width: 6
#| fig-height: 4
ggplot(penguins, 
       aes(x = bill_length_mm, 
           y = bill_depth_mm, 
           color = species)) +
  geom_point()
```

````

. . .

<br>

```{r, echo=TRUE}
#| output-location: column
#| fig-width: 6
#| fig-height: 4

ggplot(
  penguins,
  aes(x = bill_length_mm, y = bill_depth_mm, color = species)
) +
  geom_point()
```

## Diagrams

Quarto supports `mermaid.js`

:::: columns

::: column
Code
````markdown

```mermaid
%%| fig-width: 6.5
flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
```

````
:::

::: column
Result
```{mermaid}
%%| theme: sandstone
%%| fig-width: 6.5
flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
```

:::

::::

## Caching computations

````markdown
---
title: "My Document"
execute: 
  cache: true
---

```{{r}}
#| cache: true
# code for lengthy computation...
```

````

## Exercise 1: Quarto manuscripts

Complete exercise 3 at https://rsc.cynkra.com/e2m2-workshop/exercises.html#quarto.

## Exercise 2: Quarto websites

Complete exercise 4 at https://rsc.cynkra.com/e2m2-workshop/exercises.html#quarto.

## Dashboards

````md
---
title: "Old Faithful"
format: dashboard
server: shiny
---

## {.sidebar}
```{{r}}
sliderInput("bins", "Number of bins:", 
            min = 1, max = 50, value = 30)
plotOutput("distPlot")
```

## Column

```{{r}}
#| context: server
output$distPlot <- renderPlot({
  x <- faithful[, 2]  # Old Faithful Geyser data
  bins <- seq(min(x), max(x), length.out = input$bins + 1)
  hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
```
````

## Exercise 3: Quarto dashboards

Complete exercise 5 at https://rsc.cynkra.com/e2m2-workshop/exercises.html#quarto.


## Congratulations

![](../../assets/images/1_shiny/congrats.svg){width="50%" fig-align="center"}

## What's next

Become a Quarto pro:

- Get inspired: https://quarto.org/docs/gallery/.
- Discover and use extensions: https://quarto.org/docs/extensions/.
- Create custom extensions: https://quarto.org/docs/extensions/creating.html.
- Read all guides: https://quarto.org/docs/guide/.